// <auto-generated />
using System;
using API_DataBase_KillTeamWarhammer40k.Entieties;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_DataBase_KillTeamWarhammer40k.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20251006213727_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Equipments.FactionEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KillTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KillTeamId");

                    b.ToTable("FactionEquipment");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Equipments.UniversalEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UniversalEquipment");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Operatives.Operative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Apl")
                        .HasColumnType("int");

                    b.Property<int>("KillTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Move")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Save")
                        .HasColumnType("int");

                    b.Property<int>("Wounds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KillTeamId");

                    b.ToTable("Operative");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Operatives.OperativeAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperativeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperativeId");

                    b.ToTable("OperativeAbility");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Ploys.FirefightPloy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KillTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KillTeamId");

                    b.ToTable("FirefightPloy");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Ploys.StrategyPloy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KillTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KillTeamId");

                    b.ToTable("StrategyPloy");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Team.FactionRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KillTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KillTeamId");

                    b.ToTable("FactionRule");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Team.KillTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KillTeam");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.WeaponStats.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Atk")
                        .HasColumnType("int");

                    b.Property<int>("DmgCrit")
                        .HasColumnType("int");

                    b.Property<int>("DmgNormal")
                        .HasColumnType("int");

                    b.Property<int>("Hit")
                        .HasColumnType("int");

                    b.Property<bool>("IsRange")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weapon");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.WeaponStats.WeaponAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeaponAbility");
                });

            modelBuilder.Entity("OperativeWeapon", b =>
                {
                    b.Property<int>("OperativesId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponsId")
                        .HasColumnType("int");

                    b.HasKey("OperativesId", "WeaponsId");

                    b.HasIndex("WeaponsId");

                    b.ToTable("OperativeWeapon");
                });

            modelBuilder.Entity("WeaponWeaponAbility", b =>
                {
                    b.Property<int>("WeaponAbilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponsId")
                        .HasColumnType("int");

                    b.HasKey("WeaponAbilitiesId", "WeaponsId");

                    b.HasIndex("WeaponsId");

                    b.ToTable("WeaponWeaponAbility");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Equipments.FactionEquipment", b =>
                {
                    b.HasOne("API_DataBase_KillTeamWarhammer40k.Entieties.Team.KillTeam", "KillTeam")
                        .WithMany("FactionEquipments")
                        .HasForeignKey("KillTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KillTeam");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Operatives.Operative", b =>
                {
                    b.HasOne("API_DataBase_KillTeamWarhammer40k.Entieties.Team.KillTeam", "KillTeam")
                        .WithMany("Operatives")
                        .HasForeignKey("KillTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KillTeam");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Operatives.OperativeAbility", b =>
                {
                    b.HasOne("API_DataBase_KillTeamWarhammer40k.Entieties.Operatives.Operative", "Operative")
                        .WithMany("OperativeAbilities")
                        .HasForeignKey("OperativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Operative");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Ploys.FirefightPloy", b =>
                {
                    b.HasOne("API_DataBase_KillTeamWarhammer40k.Entieties.Team.KillTeam", "KillTeam")
                        .WithMany("FirefightPloys")
                        .HasForeignKey("KillTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KillTeam");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Ploys.StrategyPloy", b =>
                {
                    b.HasOne("API_DataBase_KillTeamWarhammer40k.Entieties.Team.KillTeam", "KillTeam")
                        .WithMany("StrategyPloys")
                        .HasForeignKey("KillTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KillTeam");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Team.FactionRule", b =>
                {
                    b.HasOne("API_DataBase_KillTeamWarhammer40k.Entieties.Team.KillTeam", "KillTeam")
                        .WithMany("FactionRules")
                        .HasForeignKey("KillTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KillTeam");
                });

            modelBuilder.Entity("OperativeWeapon", b =>
                {
                    b.HasOne("API_DataBase_KillTeamWarhammer40k.Entieties.Operatives.Operative", null)
                        .WithMany()
                        .HasForeignKey("OperativesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_DataBase_KillTeamWarhammer40k.Entieties.WeaponStats.Weapon", null)
                        .WithMany()
                        .HasForeignKey("WeaponsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeaponWeaponAbility", b =>
                {
                    b.HasOne("API_DataBase_KillTeamWarhammer40k.Entieties.WeaponStats.WeaponAbility", null)
                        .WithMany()
                        .HasForeignKey("WeaponAbilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_DataBase_KillTeamWarhammer40k.Entieties.WeaponStats.Weapon", null)
                        .WithMany()
                        .HasForeignKey("WeaponsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Operatives.Operative", b =>
                {
                    b.Navigation("OperativeAbilities");
                });

            modelBuilder.Entity("API_DataBase_KillTeamWarhammer40k.Entieties.Team.KillTeam", b =>
                {
                    b.Navigation("FactionEquipments");

                    b.Navigation("FactionRules");

                    b.Navigation("FirefightPloys");

                    b.Navigation("Operatives");

                    b.Navigation("StrategyPloys");
                });
#pragma warning restore 612, 618
        }
    }
}
